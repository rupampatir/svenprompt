{
  "00.c": "#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n#include <ctype.h>  // Include the ctype.h header for whitespace manipulation functions\n\nint main(int argc, char *argv[]) {\n    // Make sure 1 argument was provided\n    if (argc != 2) {\n        printf(\"Need 1 argument\\n\");\n        exit(1);\n    }\n\n    // Get the argument\n    char *input = argv[1];\n\n    // Thought Process:\n    // We want to remove trailing whitespaces from the input argument.\n    // Trailing whitespaces can be problematic as they can affect string comparison\n    // or lead to unexpected behavior in further processing.\n\n    // To remove trailing whitespaces, we'll iterate over the characters in the input string\n    // from the end to the beginning, and replace any whitespace characters with the null terminator.\n\n    size_t length = strlen(input);\n    // Get the length of the input string\n\n    for (int i = length - 1; i >= 0; i--) {\n        if (isspace(input[i])) {\n            input[i] = '\\0';\n        } else {\n            break;\n        }\n    }\n    // Iterate over the characters in the input string from the end to the beginning.\n    // If a whitespace character is encountered, replace it with the null terminator.\n    // If a non-whitespace character is encountered, stop iterating.\n\n    // Print the updated argument\n    printf(\"'%s'\\n\", input);\n\n    return 0;  // End of the program\n}"
}